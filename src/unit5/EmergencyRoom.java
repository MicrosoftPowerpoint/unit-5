/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package unit5;

import javax.swing.JOptionPane;
import static unit5.iteratorexample1.li;

/**
 *
 * @author dani3700
 */
public class EmergencyRoom extends javax.swing.JFrame {
    
   Patient p;
   LinkedPriorityQueue linkpq;
   String text;
    public EmergencyRoom() {
        initComponents();
        linkpq = new LinkedPriorityQueue(3);
        text = "";
         
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jbrfair = new javax.swing.JRadioButton();
        jbrserious = new javax.swing.JRadioButton();
        jbrcritical = new javax.swing.JRadioButton();
        btnschedule = new javax.swing.JButton();
        btntreatnext = new javax.swing.JButton();
        btntreatall = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtarea = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mnuexit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        mnuclearscreen = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Patient:");

        buttonGroup1.add(jbrfair);
        jbrfair.setText("Fair Condition");
        jbrfair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbrfairActionPerformed(evt);
            }
        });

        buttonGroup1.add(jbrserious);
        jbrserious.setText("Serious Condition");
        jbrserious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbrseriousActionPerformed(evt);
            }
        });

        buttonGroup1.add(jbrcritical);
        jbrcritical.setText("Critical Condition");
        jbrcritical.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbrcriticalActionPerformed(evt);
            }
        });

        btnschedule.setText("Schedule");
        btnschedule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnscheduleActionPerformed(evt);
            }
        });

        btntreatnext.setText("Treat Next");
        btntreatnext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntreatnextActionPerformed(evt);
            }
        });

        btntreatall.setText("Treat All");
        btntreatall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntreatallActionPerformed(evt);
            }
        });

        txtarea.setColumns(20);
        txtarea.setRows(5);
        jScrollPane1.setViewportView(txtarea);

        jMenu1.setText("File");

        mnuexit.setText("Exit");
        mnuexit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuexitActionPerformed(evt);
            }
        });
        jMenu1.add(mnuexit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        mnuclearscreen.setText("Clear Screen");
        mnuclearscreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuclearscreenActionPerformed(evt);
            }
        });
        jMenu2.add(mnuclearscreen);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jbrfair)
                                .addComponent(jbrserious)
                                .addComponent(jbrcritical))
                            .addGap(80, 80, 80)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnschedule)
                                .addComponent(btntreatnext, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                                .addComponent(btntreatall, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbrfair)
                    .addComponent(btnschedule))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jbrserious))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(btntreatnext)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbrcritical)
                    .addComponent(btntreatall))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbrfairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbrfairActionPerformed
     
    }//GEN-LAST:event_jbrfairActionPerformed

    private void jbrcriticalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbrcriticalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbrcriticalActionPerformed

    private void jbrseriousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbrseriousActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbrseriousActionPerformed

    private void btnscheduleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnscheduleActionPerformed
  String nm;
        String condi = "";
        nm = txtName.getText();
        condi = buttonGroup1.getSelection().getActionCommand();
        
        if(jbrcritical.isSelected()){
            condi = jbrcritical.getText(); p = new Patient(nm, condi);
            linkpq.enqueue(p, 0);
        }
        else if(jbrserious.isSelected()){
            condi = jbrserious.getText(); p = new Patient(nm, condi);
            linkpq.enqueue(p, 1);
        }
        else if(jbrfair.isSelected()){
            condi = jbrfair.getText();  p = new Patient(nm, condi);
            linkpq.enqueue(p, 2);
        }
        txtName.setText("");
        buttonGroup1.clearSelection();
        text += "Name: " + p.getName() + "\t" + p.getCondition() + " waiting\n";
    
        txtarea.setText(text);
    }//GEN-LAST:event_btnscheduleActionPerformed

    private void btntreatnextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntreatnextActionPerformed
    if(linkpq.codes!=""){
        text += linkpq.dequeue() + " was treated\n";
    }
    else if(linkpq.codes()!=""){
    linkpq.dequeue();  text += linkpq.dequeue() + " was treated\n";     
      
    }
    else if(linkpq.codes()!=""){
    text += linkpq.dequeue() + " was treated\n"; 
    }
    txtarea.setText(text);  
    
    }//GEN-LAST:event_btntreatnextActionPerformed

    private void btntreatallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntreatallActionPerformed
  if(linkpq.codes() == ""){
            JOptionPane.showMessageDialog(this, " 0 patients are available to be treated");
            return;
        }
        while(linkpq.codes() != ""){
            text += (Patient)linkpq.dequeue() + " was treated\n"; 
          }
        txtarea.setText(text);
    }//GEN-LAST:event_btntreatallActionPerformed

    private void mnuclearscreenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuclearscreenActionPerformed
       txtName.setText("");
       txtarea.setText("");
       JOptionPane.showMessageDialog(this, " cleared");
    }//GEN-LAST:event_mnuclearscreenActionPerformed

    private void mnuexitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuexitActionPerformed
      this.dispose();
    }//GEN-LAST:event_mnuexitActionPerformed

    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmergencyRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmergencyRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmergencyRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmergencyRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmergencyRoom().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnschedule;
    private javax.swing.JButton btntreatall;
    private javax.swing.JButton btntreatnext;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton jbrcritical;
    private javax.swing.JRadioButton jbrfair;
    private javax.swing.JRadioButton jbrserious;
    private javax.swing.JMenuItem mnuclearscreen;
    private javax.swing.JMenuItem mnuexit;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextArea txtarea;
    // End of variables declaration//GEN-END:variables
}
